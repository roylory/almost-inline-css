//
// .for & .foreach https://github.com/seven-phases-max/less.curious
//
.for(@i, @n, @inc:1) {.-each(@i * @inc)} // added @inc
.for(@n)     when (isnumber(@n)) {.for(1, @n)}
.for(@i, @n, @inc:1) when not (@i = @n)  {
    .for((@i + (@n - @i) / abs(@n - @i)), @n, @inc);
}
.for(@array)   when (default()) {.for-impl_(length(@array))}
.for-impl_(@i) when (@i > 1)    {.for-impl_((@i - 1))}
.for-impl_(@i) when (@i > 0)    {.-each(extract(@array, @i))}

//
// color mixin
//
@colors: aqua, black, blue, brown, cyan, gold, gray, green, lime, maroon, navy, pink, red, salmon, silver, skyblue, tan, teal, tomato, violet, white, yellow, yellowgreen;
@hex: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F;
.color-mixin(@name) {
    & {
        .for(@colors); .-each(@color) {
            &@{color} {
                @{name}: @color;
            }
        }
    }
    & {
        .for(@hex); .-each(@h) {
            &@{h}@{h}@{h} {
                @{name}: e("#@{h}@{h}@{h}");
            }
        }
    }
}

//
// direction list
//
@directions: left, right, top, bottom;

//
// margin & padding
//
.area-class(margin);
.area-class(padding);
.area-class(@name) {
    .@{name}- {
        &0,
        &none {
            @{name}: 0;
        }
        & {
            .for(1, 20, 5); .-each(@i) {
                &@{i}px {
                    @{name}: unit(@i, px);
                }
            }
        }
        & {
            .for(@directions); .-each(@direction) {
                &@{direction}- {
                    &0,
                    &none {
                        @{name}-@{direction}: 0;
                    }
                    .for(1, 20, 5); .-each(@i) {
                        &@{i}px {
                            @{name}-@{direction}: unit(@i, px);
                        }
                    }
                }
            }
        }
    }    
}

//
// border
//
.border- {
    &0,
    &none {
        border: none;
    }
    & {
        .for(5); .-each(@i) {
            &@{i}px {
                border-width: unit(@i, px);
            }
        }
    }
    &,
    &color- {
        .color-mixin(border-color);
    }
    & {
        .for(@directions); .-each(@direction) {
            &@{direction}- {
                &0,
                &none {
                    border-@{direction}-width: 0;
                }
                .for(5); .-each(@i) {
                    &@{i}px {
                        border-@{direction}-width: unit(@i, px);
                    }
                }
                &,
                &color- {
                    .color-mixin(e("border-@{direction}-color"));
                }
            }
        }
    }
}

//
// background color
//
.background-,
.bg- {
    .color-mixin(background-color);
}


//
// text color
//
.text-,
.color-,
.text-color- {
    .color-mixin(color);
}

//
// width , height, min-width, min-height, max-width, max-height
//
.dimension-class(width);
.dimension-class(height);
.dimension-class(min-width);
.dimension-class(min-height);
.dimension-class(max-width);
.dimension-class(max-height);
.dimension-class(@name) {
    .@{name}- {
        & {
            .for(1, 50, 20); .-each(@i) {
                &@{i}px {
                    @{name}: unit(@i, px);
                }
            }
        }
    }
}

//
// text-decoration & text-align
//
.text- {
    &,
    &decoration- {
        &none {
            text-decoration: none;
        }
        &underline {
            text-decoration: underline;
        }
        &dashed {
            text-decoration: dashed;
        }
        &dotted {
            text-decoration: dotted;
        }
    }
    &,
    &align- {
        &left {
            text-align: left;
        }
        &right {
            text-align: right;
        }
        &center {
            text-align: center;
        }
    }
}

//
// vertical-align
//
.valign-,
.vertical-align- {
    &top {
        vertical-align: top;
    }
    &middle {
        vertical-align: middle;
    }
    &bottom {
        vertical-align: bottom;
    }
}

//
// display
//
.display- {
    &inline {
        display: inline;
    }
    &block {
        display: block;
    }
    &inline-block {
        display: inline-block;
    }
    &none {
        display: none;
    }
}

//
// float & clear
//
.float- {
    &left {
        float: left;
    }
    &right {
        float: right;
    }
}
.clear- {
    &left {
        clear: left;
    }
    &right {
        clear: right;
    }
    &both {
        clear: both;
    }
}

//
// font-size & font-weight
//
/*csslint font-sizes: false */
.font- {
    &size- {
        .for(10, 50); .-each(@i) {
            &@{i}px {
                font-size: unit(@i, px);
            }
        }
    }
    &weight- {
        &bold {
            font-weight: bold;
        }
        &normal {
            font-weight: normal;
        }
    }
}